generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Movie {
  id             Int        @id @default(autoincrement())
  userCreatedId  String?    @map("user_created") @db.Uuid
  dateCreated    DateTime?  @map("date_created") @db.Timestamptz(6)
  name           String     @unique(map: "movie_name_unique") @db.VarChar(255)
  startYear      Int?       @map("start_year")
  endYear        Int        @map("end_year")
  other_info     Json       @default("{}") @db.Json
  admin_accepted Boolean?   @default(false)
  poster         String?    @db.VarChar(255)
  creatorUser    User?      @relation(fields: [userCreatedId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "movie_user_created_foreign")
  usersFav       MovieFav[]
}

model MovieFav {
  id      Int    @id @default(autoincrement())
  movieId Int    @map("Movie_id")
  userId  String @map("user_id") @db.Uuid
  movie   Movie  @relation(fields: [movieId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "moviefav_movie_id_foreign")
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "moviefav_user_id_foreign")
}

model User {
  id             String     @id(map: "directus_users_pkey") @default(uuid()) @db.Uuid
  firstName      String?    @map("first_name") @db.VarChar(50)
  lastName       String?    @map("last_name") @db.VarChar(50)
  email          String     @unique(map: "directus_users_email_unique") @db.VarChar(128)
  password       String     @db.VarChar(255)
  location       String?    @db.VarChar(255)
  description    String?
  tags           Json?      @db.Json
  avatar         String?    @db.VarChar
  language       String?    @db.VarChar(255)
  username       String     @unique(map: "directus_users_username_unique") @db.VarChar(255)
  email_verified Boolean?   @default(false)
  moviesCreated  Movie[]
  favMovies      MovieFav[]
}
